@use 'sass:map';
@use 'sass:list';
@use '../functions/color' as color-fn;

//
// Color system
// https://www.experience-hub.ch/document/2637#/grundlagen-apps/colors
//

$color-progression: (10, 20, 40, 60, 80);

$white: #fff !default;
$gray-100: #e5e5e5 !default;
$gray-200: #cbcbcb !default;
$gray-400: #999 !default;
$gray-600: #666 !default;
$gray-800: #333 !default;
$black: #000 !default;

$grays: ();
@each $step in $color-progression {
  $grays: map.set($grays, $step, hsl(0, 0%, 100% - $step));
}

$grays: map.merge(
  $grays,
  (
    '50': $gray-50,
    '100': $gray-100,
    '200': $gray-200,
    '400': $gray-400,
    '600': $gray-600,
    '800': $gray-800,
  )
) !default;

$white-alpha-10: rgba($white, 0.1) !default;
$white-alpha-20: rgba($white, 0.2) !default;
$white-alpha-30: rgba($white, 0.3) !default;
$white-alpha-40: rgba($white, 0.4) !default;
$white-alpha-50: rgba($white, 0.5) !default;
$white-alpha-60: rgba($white, 0.6) !default;
$white-alpha-70: rgba($white, 0.7) !default;
$white-alpha-80: rgba($white, 0.8) !default;
$white-alpha-90: rgba($white, 0.9) !default;

$white-alphas: (
  10: $white-alpha-10,
  20: $white-alpha-20,
  30: $white-alpha-30,
  40: $white-alpha-40,
  50: $white-alpha-50,
  60: $white-alpha-60,
  70: $white-alpha-70,
  80: $white-alpha-80,
  90: $white-alpha-90,
) !default;

$black-alpha-10: rgba($black, 0.1) !default;
rgba(var(--black-rgb), 0.2): rgba($black, 0.2) !default;
$black-alpha-30: rgba($black, 0.3) !default;
rgba(var(--black-rgb), 0.4): rgba($black, 0.4) !default;
$black-alpha-50: rgba($black, 0.5) !default;
rgba(var(--black-rgb), 0.6): rgba($black, 0.6) !default;
$black-alpha-70: rgba($black, 0.7) !default;
rgba(var(--black-rgb), 0.8): rgba($black, 0.8) !default;
$black-alpha-90: rgba($black, 0.9) !default;

$black-alphas: (
  10: $black-alpha-10,
  20: rgba(var(--black-rgb), 0.2),
  30: $black-alpha-30,
  40: rgba(var(--black-rgb), 0.4),
  50: $black-alpha-50,
  60: rgba(var(--black-rgb), 0.6),
  70: $black-alpha-70,
  80: rgba(var(--black-rgb), 0.8),
  90: $black-alpha-90,
) !default;

// Contrast colors
$best-contrast: $black;
$inverted-contrast: $white;

// Functional
// Colour names via: http://chir.ag/projects/name-that-color/
$red: #a51728 !default;
$orange: #f49e00 !default;
$yellow: #fc0 !default;
$orange: #f49e00 !default;
$green: #2c911c !default;
$gray-pampas: #faf9f8 !default;
$gray-cararra: #f4f3f1 !default;

// Accent (implement names from branding module)
$nightblue-dark: #004976;
$nightblue-bright: #0076a8;
$petrol-dark: #006d68;
$petrol-bright: #00968f;
$coral-dark: #9e2a2f;
$coral-bright: #e03c31;
$purple-dark: #80276c;
$purple-bright: #c5299b;
$olive-dark: #716135;
$olive-bright: #aa9d2e;
$aubergine-dark: #523178;
$aubergine-bright: #7566a0;

$accent-colors: () !default;
$accent-colors: map.merge(
  (
    'nightblue': $nightblue-dark,
    'nightblue-bright': $nightblue-bright,
    'petrol': $petrol-dark,
    'petrol-bright': $petrol-bright,
    'coral': $coral-dark,
    'coral-bright': $coral-bright,
    'olive': $olive-dark,
    'olive-bright': $olive-bright,
    'purple': $purple-dark,
    'purple-bright': $purple-bright,
    'aubergine': $aubergine-dark,
    'aubergine-bright': $aubergine-bright,
  ),
  $accent-colors
);

$colors: () !default;
$colors: map.merge(
  (
    'white': $white,
    'black': $black,
    'red': $red,
    'orange': $orange,
    'yellow': $yellow,
    'green': $green,
    'nightblue': $nightblue-dark,
    'nightblue-bright': $nightblue-bright,
    'petrol': $petrol-dark,
    'petrol-bright': $petrol-bright,
    'coral': $coral-dark,
    'coral-bright': $coral-bright,
    'olive': $olive-dark,
    'olive-bright': $olive-bright,
    'purple': $purple-dark,
    'purple-bright': $purple-bright,
    'aubergine': $aubergine-dark,
    'aubergine-bright': $aubergine-bright,
  ),
  $colors
);

$primary: $gray-80 !default;
$secondary: $gray-600 !default; // In the old CWF it was $nightblue-dark - where is the secondary color defined by K?
$secondary-color: $secondary;
$success: $green !default;
$info: $yellow !default;
$warning: $orange !default;
$danger: $red !default;
$dark: $primary !default;
$light: $gray-cararra !default;

$background-colors: () !default;
$theme-colors: map.merge(
  (
    'primary': $primary,
    'secondary': $secondary,
    'success': $success,
    'info': $info,
    'warning': $warning,
    'danger': $danger,
    'active': $yellow,
    'white': $white,
    'light': $light,
    'dark': $dark,
    'nightblue': $nightblue-dark,
    'nightblue-bright': $nightblue-bright,
    'petrol': $petrol-dark,
    'petrol-bright': $petrol-bright,
    'coral': $coral-dark,
    'coral-bright': $coral-bright,
    'olive': $olive-dark,
    'olive-bright': $olive-bright,
    'purple': $purple-dark,
    'purple-bright': $purple-bright,
    'aubergine': $aubergine-dark,
    'aubergine-bright': $aubergine-bright,
  ),
  $theme-colors
);

$contextual-colors: () !default;
$contextual-colors: map.merge(
  (
    'success': $success,
    'danger': $danger,
    'warning': $warning,
    'info': $yellow,
  ),
  $contextual-colors
);

$highlight-colors: () !default;
$highlight-colors: map.merge(
  (
    'nightblue': $nightblue-dark,
    'nightblue-bright': $nightblue-bright,
    'purple': $purple-dark,
    'petrol': $petrol-dark,
    'olive': $olive-dark,
    'aubergine': $aubergine-dark,
    'coral': $coral-dark,
    'coral-bright': $coral-bright,
  ),
  $highlight-colors
);

// Custom background-colours
$background-colors: () !default;
$background-colors: map.merge(
  (
    'dark': $gray-cararra,
    'light': $gray-pampas,
    'white': $white,
    'nightblue-bright': $nightblue-bright,
  ),
  $background-colors
);

$icon-colors: () !default;
$icon-colors: map.merge(
  (
    'primary': $primary,
    'white': $white,
    'danger': $danger,
    'warning': $warning,
    'success': $success,
  ),
  $icon-colors
);

// Set a specific jump point for requesting color jumps
$theme-color-interval: 8% !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$color-contrast-dark: $black !default; // This still needs to be talked about with K
$color-contrast-light: $white !default;

// Body
//
// Settings for the `<body>` element.

$body-bg: $white !default;
$body-color: $black !default;

// Links
//
// Style anchor elements.

$link-color: $black !default;
$link-decoration: underline !default;
$link-hover-color: $gray-600 !default;
$link-hover-decoration: underline !default;

// Components
//
// General component colors

$component-active-color: $white !default;
$component-active-bg: $primary !default;

$inverted-backgrounds: ();
@each $colorname, $color in $theme-colors {
  @if (color-fn.get-contrast-color($color) != #000) {
    $inverted-backgrounds: list.append(
      $inverted-backgrounds,
      '.bg-#{$colorname}',
      $separator: comma
    );
  }
}

@mixin inverted-colors() {
  :is(#{$inverted-backgrounds}) {
    @content;
  }
}
