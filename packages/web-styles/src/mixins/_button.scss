@use 'sass:map';

@use '../variables/components/button';
@use '../variables/type';
@use '../functions/color' as color-fn;
@use 'utilities';

@mixin reset-button {
  padding: 0;
  overflow: visible;
  border: 0;
  background: none;
  color: inherit;
  font: inherit;
  line-height: normal;
  user-select: none;
  appearance: button; // for input
}

@mixin button-size($size: md) {
  height: map.get(button.$btn-height-map, $size);
  padding: 0 map.get(button.$btn-padding-x-map, $size);
  border-radius: map.get(button.$btn-border-radius-map, $size);
  font-size: map.get(type.$font-size-map, $size);
  gap: map.get(button.$btn-padding-x-map, $size) * 0.5;

  > .pi {
    transform: scale(map.get(button.$btn-icon-scale-map, $size));
  }
}

@mixin button-color-variant($name, $color) {
  .btn-#{$name} {
    opacity: 1;
    background-color: $color;
    color: color-fn.get-contrast-color($color);

    @if (color-fn.get-contrast-color($color) == #fff) {
      &.btn-animated::after {
        filter: invert(1);
      }
    }

    @include utilities.not-disabled-focus-hover() {
      background-color: darken($color, 10%);
    }
  }
}
